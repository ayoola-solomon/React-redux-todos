{"version":3,"sources":["components/Link.js","containers/FilterLink.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","../node_modules/reselect/es/index.js","selectors/index.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js"],"names":["Link","_ref","active","children","setFilter","react_default","a","createElement","className","classnames","selected","style","cursor","onClick","connect","state","ownProps","filter","visibilityFilter","dispatch","setVisibilityFilter","FILTER_TITLES","_FILTER_TITLES","Object","defineProperty","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","Footer","props","activeCount","completedCount","onClearCompleted","itemWord","keys","map","key","FilterLink","TodoItem","editing","handleDoubleClick","_this","setState","handleSave","id","text","length","deleteTodo","editTodo","element","_this2","this","_this$props","todo","completeTodo","TodoTextInput","onSave","type","checked","completed","onChange","onDoubleClick","Component","TodoList","filteredTodos","actions","TodoItem_TodoItem","assign","defaultEqualityCheck","b","createSelector","memoize","_len","arguments","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","join","Error","getDependencies","memoizedResultFunc","apply","undefined","concat","selector","params","i","push","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","getTodos","todos","getVisibleTodos","t","getCompletedTodoCount","reduce","count","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","readOnly","completeAllTodos","containers_VisibleTodoList","components_Footer","clearCompleted"],"mappings":"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","file":"static/js/3.8ac7a8ce.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Link = ({ active, children, setFilter }) => (\n  // eslint-disable-next-line jsx-a11y/anchor-is-valid\n  <a\n    className={classnames({ selected: active })}\n    style={{ cursor: \"pointer\" }}\n    onClick={() => setFilter()}\n  >\n    {children}\n  </a>\n);\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired\n};\n\nexport default Link;\n","import { connect } from \"react-redux\";\nimport { setVisibilityFilter } from \"../actions\";\nimport Link from \"../components/Link\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FilterLink from \"../containers/FilterLink\";\nimport {\n  SHOW_ALL,\n  SHOW_COMPLETED,\n  SHOW_ACTIVE\n} from \"../constants/TodoFilters\";\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: \"All\",\n  [SHOW_ACTIVE]: \"Active\",\n  [SHOW_COMPLETED]: \"Completed\"\n};\n\nconst Footer = props => {\n  const { activeCount, completedCount, onClearCompleted } = props;\n  const itemWord = activeCount === 1 ? \"item\" : \"items\";\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || \"No\"}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter => (\n          <li key={filter}>\n            <FilterLink filter={filter}>{FILTER_TITLES[filter]}</FilterLink>\n          </li>\n        ))}\n      </ul>\n      {!!completedCount && (\n        <button className=\"clear-completed\" onClick={onClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"./TodoTextInput\";\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    completeTodo: PropTypes.func.isRequired\n  };\n\n  state = {\n    editing: false\n  };\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true });\n  };\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(id);\n    } else {\n      this.props.editTodo(id, text);\n    }\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props;\n\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={text => this.handleSave(todo.id, text)}\n        />\n      );\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo.id)}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo.id)} />\n        </div>\n      );\n    }\n\n    return (\n      <li\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}\n      >\n        {element}\n      </li>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ filteredTodos, actions }) => (\n  <ul className=\"todo-list\">\n    {filteredTodos.map(todo => (\n      <TodoItem key={todo.id} todo={todo} {...actions} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nexport default TodoList;\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getTodos = state => state.todos\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector(\n  [getTodos],\n  todos => (\n    todos.reduce((count, todo) =>\n      todo.completed ? count + 1 : count,\n      0\n    )\n  )\n)","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as TodoActions from \"../actions\";\nimport TodoList from \"../components/TodoList\";\nimport { getVisibleTodos } from \"../selectors\";\n\nconst mapStateToProps = state => ({\n  filteredTodos: getVisibleTodos(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n});\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n\nexport default VisibleTodoList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"./Footer\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\n\nconst MainSection = ({ todosCount, completedCount, actions }) => (\n  <section className=\"main\">\n    {!!todosCount && (\n      <span>\n        <input\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          checked={completedCount === todosCount}\n          readOnly\n        />\n        <label onClick={actions.completeAllTodos} />\n      </span>\n    )}\n    <VisibleTodoList />\n    {!!todosCount && (\n      <Footer\n        completedCount={completedCount}\n        activeCount={todosCount - completedCount}\n        onClearCompleted={actions.clearCompleted}\n      />\n    )}\n  </section>\n);\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nexport default MainSection;\n","import { connect } from \"react-redux\";\nimport * as TodoActions from \"../actions\";\nimport { bindActionCreators } from \"redux\";\nimport MainSection from \"../components/MainSection\";\nimport { getCompletedTodoCount } from \"../selectors\";\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection);\n"],"sourceRoot":""}